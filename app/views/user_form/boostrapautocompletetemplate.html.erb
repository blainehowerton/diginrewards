<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>jQuery UI Autocomplete - Combobox</title>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
  <link rel="stylesheet" href="/resources/demos/style.css">
  <style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
  </style>
  <script>
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
 
  $(function() {
    $( "#user_id" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#user_id" ).toggle();
    });
  });

  $(function() {
    $( "#cause_id" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#cause_id" ).toggle();
    });
  });

  $(function() {
    $( "#retailer_id" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#retailer_id" ).toggle();
    });
  });

  $(function() {
    $( "#transaction_date" ).datepicker();
  });
  </script>
</head>
<body>

<%= form_for(Transaction.new) do |f| %>
 
 <div class="ui-widget">
  <label>Username:  </label>
<%= select_tag :user_id, options_from_collection_for_select(User.all, :id, :username) %> 
    
</div>

<br>

<p>
  Transaction Date
  <%= f.date_select(:transaction_date) %>
  </p>

<br>

  <p>
  Transaction Amount
  <%= text_field(:transaction, :amount) %>
  </p>

<br>

  <p>
  Cause Name
  <%= f.select(:cause_id) do %>
  <%= options_from_collection_for_select(Cause.all, :id, :name) %>
  <% end %>
  </p>

<br>

  <p>
  Retailer Name
  <%= f.select(:retailer_id) do %>
  <%= options_from_collection_for_select(Retailer.all, :id, :name) %>
  <% end %>
  </p>

<br>

<!-- <div class="ui-widget">
  <label>Date: </label>
  <%= date_field(:transaction, :transaction_date) %>
</div>

<br>
 -->
<!-- <p>
  Transaction Amount
  <%= text_field(:transaction, :amount) %>
  </p>

<br>

<div class="ui-widget">
  <label>Username:  </label>
    <%= select_tag "user_id", options_from_collection_for_select(User.all, :id, :username) %>
</div>

<br>

<div class="ui-widget">
  <label>Cause:  </label>
  <select id="cause_id">
    <%= options_from_collection_for_select(Cause.all, :id, :name) %>
  </select>
</div>

<br>

<div class="ui-widget">
  <label>Retailer:  </label>
  <select id="retailer_id">
    <%= options_from_collection_for_select(Retailer.all, :id, :name) %>
  </select>
</div>

<br> -->

<p>
  Upload Receipt Image
  <%= f.file_field :image %>
  </p>

  <br>

  <div class="actions">
    <%= f.submit "Submit" %>
    </div>

  <% end %> 
 
</body>
</html>